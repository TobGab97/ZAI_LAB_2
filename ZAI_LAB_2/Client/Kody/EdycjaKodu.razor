@page "/Kody/Edycja/{staryId2}"
@using ZAI_LAB_2.Shared
@inject HttpClient Http
@inject NavigationManager navManager
@inject ILocalStorageService localstorage
    @if (EdytowanyKod != null)
   {
         <EditForm Model="EdytowanyKod" OnSubmit="Edytuj" >
         
            <label for="Edytuj" class="form-label" >KodPocztowy</label>
            <InputText id="kod" @bind-Value="EdytowanyKod.KodPocztowy"class="form-control"></InputText>
                    <label for="Edytuj" class="form-label" >Adres</label> 
            <InputText @bind-Value="EdytowanyKod.Adres"class="form-control"></InputText>
                    <label for="Edytuj" class="form-label">Miejscowosc</label>
            <InputText @bind-Value="EdytowanyKod.Miejscowosc"class="form-control"></InputText>
                    <label for="Edytuj" class="form-label">Wojewodztwo</label>
            <InputText @bind-Value="EdytowanyKod.Wojewodztwo"class="form-control"></InputText>
                    <label for="Edytuj" class="form-label">Powiat</label>
            <InputText @bind-Value="EdytowanyKod.Powiat"class="form-control"></InputText>
            <button type="submit" class ="btn btn-primary" @onclick="@(()=> check = true)">Edytuj</button>
            <button type="submit" class = "btn btnbtn-danger" @onclick="@(()=> check = false)">Anuluj</button>
         </EditForm>
   }

@code {
    [Parameter]
    public  long staryId { get; set; }
    [Parameter]
    public  string staryId2 { get; set; }

    public KodyPocztowe EdytowanyKod { get; set; } = new KodyPocztowe();
    public bool check;


    async Task OnInitializedAsync()
    {
        

        var kody = await localstorage.GetItemAsync<List<KodyPocztowe>>("kody");
        var zmieniany = kody.FirstOrDefault(x => x.Id == staryId);
        EdytowanyKod = zmieniany;
        staryId2 = staryId.ToString();

    }



    async Task Edytuj()
    {
        if (check)
        {
            //        var result = await http.PostAsJsonAsync("Auth/Login",user);
            var result = await Http.PutAsJsonAsync($"kod?staryId={staryId2}", EdytowanyKod);
            if (result.IsSuccessStatusCode)
            {
                var kody = await localstorage.GetItemAsync<List<KodyPocztowe>>("kody");
                var zmieniany = kody.FirstOrDefault(x => x.Id == staryId);
                kody.Remove(zmieniany);
                kody.Add(EdytowanyKod);
                staryId2 = staryId.ToString();


                await localstorage.SetItemAsync("kody", kody);
                navManager.NavigateTo("/Kody");
            }
        } 
        else
        {
            navManager.NavigateTo("/Kody");
        }

    }
      
}

