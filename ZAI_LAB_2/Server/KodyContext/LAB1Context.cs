// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ZAI_LAB_2.Shared;

namespace ZAI_LAB_2.Server
{
    public partial class LAB1Context : DbContext
    {
        public LAB1Context()
        {
        }

        public LAB1Context(DbContextOptions<LAB1Context> options)
            : base(options)
        {
        }

        public virtual DbSet<KodyPocztowe> KodyPocztowe { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
       
            modelBuilder.Entity<KodyPocztowe>(entity =>
            {
                
                entity.ToTable("Kody_Pocztowe");

                entity.Property(e => e.Adres)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.KodPocztowy)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("Kod_Pocztowy");

                entity.Property(e => e.Miejscowosc)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Powiat)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Wojewodztwo)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Role>(entity =>
            {
                entity.Property(e => e.RoleName)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.Property(e => e.AddTime).HasColumnType("datetime");

                entity.Property(e => e.Login)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);

                entity.Property(e => e.PasswordHash)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.Property(e => e.RoleID).HasColumnName("RoleID");

                entity.Property(e => e.UserID).HasColumnName("UserID");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.UsersRoles)
                    .HasForeignKey(d => d.RoleID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Users_ToRole");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Usery)
                    .HasForeignKey(d => d.UserID)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Users_ToUser");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}